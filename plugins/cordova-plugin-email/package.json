{
  "_args": [
    [
      {
        "raw": "cordova-plugin-email@^1.2.6",
        "scope": null,
        "escapedName": "cordova-plugin-email",
        "name": "cordova-plugin-email",
        "rawSpec": "^1.2.6",
        "spec": ">=1.2.6 <2.0.0",
        "type": "range"
      },
      "/Users/admin/Desktop/MobileApp/Underwater360/ADEX/v2"
    ]
  ],
  "_from": "cordova-plugin-email@>=1.2.6 <2.0.0",
  "_id": "cordova-plugin-email@1.2.6",
  "_inCache": true,
  "_location": "/cordova-plugin-email",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/cordova-plugin-email-1.2.6.tgz_1483438026830_0.6129095109645277"
  },
  "_npmUser": {
    "name": "hypery2k",
    "email": "contact@martinreinhardt-online.de"
  },
  "_npmVersion": "4.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-email@^1.2.6",
    "scope": null,
    "escapedName": "cordova-plugin-email",
    "name": "cordova-plugin-email",
    "rawSpec": "^1.2.6",
    "spec": ">=1.2.6 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-email/-/cordova-plugin-email-1.2.6.tgz",
  "_shasum": "fb533a4aaec29d571102cc9282194d32d9c21642",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-email@^1.2.6",
  "_where": "/Users/admin/Desktop/MobileApp/Underwater360/ADEX/v2",
  "author": {
    "name": "Martin Reinhardt"
  },
  "bugs": {
    "url": "https://github.com/hypery2k/cordova-email-plugin/issues"
  },
  "cordova": {
    "id": "cordova-plugin-email",
    "platforms": [
      "android",
      "amazon-fireos",
      "ios",
      "windows",
      "wp8"
    ]
  },
  "dependencies": {},
  "description": "Cordova Email Plugin",
  "devDependencies": {
    "conventional-changelog-cli": "1.2.0",
    "fs": "0.0.1-security",
    "ink-docstrap": "1.3.0",
    "jsdoc": "3.4.0",
    "jsdoc-to-markdown": "1.3.9",
    "karma": "0.12.16",
    "karma-cordova-launcher": "0.0.9",
    "xml2js": "0.4.17"
  },
  "directories": {},
  "dist": {
    "shasum": "fb533a4aaec29d571102cc9282194d32d9c21642",
    "tarball": "https://registry.npmjs.org/cordova-plugin-email/-/cordova-plugin-email-1.2.6.tgz"
  },
  "gitHead": "5011f9bb682920ee05f820a03675fd095efc3793",
  "homepage": "https://github.com/hypery2k/cordova-email-plugin#readme",
  "keywords": [
    "cordova",
    "email",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-amazon-fireos",
    "cordova-ios",
    "cordova-wp8",
    "cordova-windows"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "hypery2k",
      "email": "npm@martinreinhardt-online.de"
    }
  ],
  "name": "cordova-plugin-email",
  "optionalDependencies": {},
  "readme": "# Cordova Email Plugin\n\n\n[![Build Status](https://travis-ci.org/hypery2k/cordova-email-plugin.svg?branch=master)](https://travis-ci.org/hypery2k/cordova-email-plugin) [![Build status](https://ci.appveyor.com/api/projects/status/d1g8ygx20or6htpg?svg=true)](https://ci.appveyor.com/project/hypery2k/cordova-email-plugin) [![npm version](https://badge.fury.io/js/cordova-plugin-email.svg)](http://badge.fury.io/js/cordova-plugin-email) [![Dependency Status](https://david-dm.org/hypery2k/cordova-email-plugin.svg)](https://david-dm.org/hypery2k/cordova-email-plugin) [![devDependency Status](https://david-dm.org/hypery2k/cordova-email-plugin/dev-status.svg)](https://david-dm.org/hypery2k/cordova-email-plugin#info=devDependencies) \n\n> The plugin provides access to the standard interface that manages the editing and sending an email message. You can use this view controller to display a standard email view inside your application and populate the fields of that view with initial values, such as the subject, email recipients, body text, and attachments. The user can edit the initial contents you specify and choose to send the email or cancel the operation.\n\n[![NPM](https://nodei.co/npm/cordova-plugin-email.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/cordova-plugin-email/)\n\n> Feel free to **donate**\n> \n> <a href='http://www.pledgie.com/campaigns/25442'><img alt='Click here to lend your support to: Owncloud Apps and make a donation at www.pledgie.com !' src='http://www.pledgie.com/campaigns/23447.png?skin_name=chrome' border='0' /></a>\n> <a target=\"_blank\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=AGPGLZYNV6Y5S\">\n> <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/de_DE/DE/i/btn/btn_donateCC_LG.gif\"/>\n> </img></a>\n> Or donate [Bitcoins](bitcoin:3NKtxw1SRYgess5ev4Ri54GekoAgkR213D):\n> [![Bitcoin](https://martinreinhardt-online.de/bitcoin.png)](bitcoin:3NKtxw1SRYgess5ev4Ri54GekoAgkR213D)\n> \n> Also via [greenaddress](https://greenaddress.it/pay/GA3ZPfh7As3Gc2oP6pQ1njxMij88u/)\n\n## Installation\n\n```bash\n$ cordova plugin add cordova-plugin-email\n```\nOr if you want to use the development version (nightly build), which maybe not stable!:\n\n```\ncordova plugin add cordova-plugin-email@next\n```\n\n<img width=\"260px\" align=\"right\" hspace=\"7\" vspace=\"5\" src=\"https://github.com/hypery2k/cordova-email-plugin/raw/master/sample.png\">\n\nUsing this interface does not guarantee immediate delivery of the corresponding email message. The user may cancel the creation of the message, and if the user does choose to send the message, the message is only queued in the Mail application outbox. This allows you to generate emails even in situations where the user does not have network access, such as in airplane mode. This interface does not provide a way for you to verify whether emails were actually sent.<br><br>\n\n\n## Overview\n1. [Supported Platforms](#supported-platforms)\n2. [Installation](#installation)\n3. [ChangeLog](#changelog)\n4. [Using the plugin](#using-the-plugin)\n5. [Examples](#examples)\n6. [Quirks](#quirks)\n\n\n## Supported Platforms\n- __iOS__\n- __Android__\n- __Amazon FireOS__\n- __Windows__\n- __Browser__\n\n\n### PhoneGap Build\nAdd the following xml to your config.xml to always use the latest version of this plugin:\n```xml\n<gap:plugin name=\"cordova-plugin-email-composer\" version=\"0.8.3\" source=\"npm\" />\n```\n\n\n## Changelog\n\n- See [CHANGELOG.md][changelog] to get the full changelog for the plugin.\n\n## Using the plugin\nThe plugin creates the object ```cordova.plugins.email``` with following methods:\n\n1. [email.isAvailable][available]\n2. [email.open][open]\n\n### Plugin initialization\nThe plugin and its methods are not available before the *deviceready* event has been fired.\n\n```javascript\ndocument.addEventListener('deviceready', function () {\n    // cordova.plugins.email is now available\n}, false);\n```\n\n### Determine if the device is capable to send emails\nThe ability to send emails can be revised through the `email.isAvailable` interface. The method takes a callback function, passed to which is a boolean property. Optionally the callback scope can be assigned as a second parameter.\n\nThe Email service is only available on devices capable which are able to send emails. E.g. which have configured an email account and have installed an email app. You can use this function to hide email functionality from users who will be unable to use it.\n\n```javascript\ncordova.plugins.email.isAvailable(\n    function (isAvailable) {\n        // alert('Service is not available') unless isAvailable;\n    }\n);\n```\n\nIf you want to open a draft in a specific application, just pass its uri scheme on iOS, or its name on Android as first parameter, to check whether the application is installed or not. The callback function will return a second parameter of type boolean then.\n\n```javascript\ncordova.plugins.email.isAvailable(\n    urischeme, function (isAvailable, withScheme) {\n        // alert('Service is not available') unless isAvailable;\n    }\n);\n\n```\n\n>**Note**: If the user didn't have any email account configured on iOS this will also return false\n\n### Open a pre-filled email draft\nA pre-filled email draft can be opened through the `email.open` or `email.openDraft` interface. The method takes a hash as an argument to specify the email's properties. All properties are optional. Further more it accepts an callback function to be called after the email view has been dismissed.\n\nAfter opening the draft the user may have the possibilities to edit, delete or send the email.\n\n#### Further informations\n- An [configured email account][available] is required to send emails.\n- Attachments can be either base64 encoded datas, files from the the device storage or assets from within the *www* folder.\n- The default value for *isHTML* is *true*.\n- Its possible to [specify][email_app] the email app on Android and iOS.\n- See the [examples][examples] for how to create and show an email draft.\n\n```javascript\ncordova.plugins.email.open({\n    to:          Array, // email addresses for TO field\n    cc:          Array, // email addresses for CC field\n    bcc:         Array, // email addresses for BCC field\n    attachments: Array, // file paths or base64 data streams\n    subject:    String, // subject of the email\n    body:       String, // email body (for HTML, set isHtml to true)\n    isHtml:    Boolean, // indicats if the body is HTML or plain text\n}, callback, scope);\n```\n\n\n## Examples\n\n### Open an email draft\nThe following example shows how to create and show an email draft pre-filled with different kind of properties.\n\n```javascript\ncordova.plugins.email.open({\n    to:      'max@mustermann.de',\n    cc:      'erika@mustermann.de',\n    bcc:     ['john@doe.com', 'jane@doe.com'],\n    subject: 'Greetings',\n    body:    'How are you? Nice greetings from Leipzig'\n});\n```\n\nOf course its also possible to open a blank draft.\n```javascript\ncordova.plugins.email.open();\n```\n\n### Send HTML encoded body\nIts possible to send the email body either as text or HTML. In the case of HTML the `isHTML` properties needs to be set.\n\n```javascript\ncordova.plugins.email.open({\n    to:      'max@mustermann.de',\n    subject: 'Greetings',\n    body:    '<h1>Nice greetings from Leipzig</h1>',\n    isHtml:  true\n});\n```\n\nWhen building for the browser, you *cannot* use HTML in the body content. Internally, this plugin generates a \"mailto:\"-style link to support browsers, and the mailto URI scheme only supports plain text body content. See [RFC6068](https://www.ietf.org/rfc/rfc6068.txt) for more details on mailto URIs.\n\n### Get informed when the view has been dismissed\nThe `open` method supports additional callback to get informed when the view has been dismissed.\n\n```javascript\ncordova.plugins.email.open(properties, function () {\n    console.log('email view dismissed');\n}, this);\n```\n\n### Adding attachments\nAttachments can be either base64 encoded datas, files from the the device storage or assets from within the *www* folder.\n\n#### Attach Base64 encoded content\nThe code below shows how to attach an base64 encoded image which will be added as a image with the name *icon.png*.\n\n```javascript\ncordova.plugins.email.open({\n    subject:     'Cordova Icon',\n    attachments: 'base64:icon.png//iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/...'\n});\n```\n\n#### Attach files from the device storage\nThe path to the files must be defined absolute from the root of the file system.\n\n```javascript\ncordova.plugins.email.open({\n    attachments: 'file:///storage/sdcard/icon.png', //=> Android\n});\n```\n\n#### Attach native app resources\nEach app has a resource folder, e.g. the _res_ folder for Android apps or the _Resource_ folder for iOS apps. The following example shows how to attach the app icon from within the app's resource folder.\n\n```javascript\ncordova.plugins.email.open({\n    attachments: 'res://icon.png' //=> res/drawable/icon (Android)\n});\n```\n\n#### Attach assets from the www folder\nThe path to the files must be defined relative from the root of the mobile web app folder, which is located under the _www_ folder.\n\n```javascript\ncordova.plugins.email.open({\n    attachments: [\n        'file://img/logo.png', //=> assets/www/img/logo.png (Android)\n        'file://css/index.css' //=> www/css/index.css (iOS)\n    ]\n});\n```\n\n### Specify email app\nIts possible to specify the email app which shall open the draft for further editing. Just pass its scheme name through the drafts app-attribute. If the phone isn´t able to handle the specified scheme it will fallback to standard.\n\n```javascript\n// Specify app by scheme name\ncordova.plugins.email.open({\n    app: 'mailto',\n    subject: 'Sent with mailto'\n})\n```\n\nOn _Android_ the app can be specified by either an alias or its package name. The alias _gmail_ is available by default.\n\n```javascript\n// Add app alias\ncordova.plugins.email.addAlias('gmail', 'com.google.android.gm');\n\n// Specify app by name or alias\ncordova.plugins.email.open({\n    app: 'gmail',\n    subject: 'Sent from Gmail'\n})\n```\n\n\n## Quirks\n\n### HTML and CSS on Android\nEven Android is capable to render HTML formatted mails, most native Mail clients like the standard app or Gmail only support rich formatted text while writing mails. That means that __CSS cannot be used__ (no _class_ and _style_ support).\n\nThe following table gives an overview which tags and attributes can be used:\n\n<table>\n<td width=\"60%\">\n    <ul>\n        <li><code>&lt;a href=\"...\"&gt;</code></li>\n        <li><code>&lt;b&gt;</code></li>\n        <li><code>&lt;big&gt;</code></li>\n        <li><code>&lt;blockquote&gt;</code></li>\n        <li><code>&lt;br&gt;</code></li>\n        <li><code>&lt;cite&gt;</code></li>\n        <li><code>&lt;dfn&gt;</code></li>\n        <li><code>&lt;div align=\"...\"&gt;</code></li>\n        <li><code>&lt;em&gt;</code></li>\n        <li><code>&lt;font size=\"...\" color=\"...\" face=\"...\"&gt;</code></li>\n        <li><code>&lt;h1&gt;</code></li>\n        <li><code>&lt;h2&gt;</code></li>\n        <li><code>&lt;h3&gt;</code></li>\n    </ul>\n</td>\n<td width=\"40%\">\n    <ul>\n        <li><code>&lt;h4&gt;</code></li>\n        <li><code>&lt;h5&gt;</code></li>\n        <li><code>&lt;h6&gt;</code></li>\n        <li><code>&lt;i&gt;</code></li>\n        <li><code>&lt;img src=\"...\"&gt;</code></li>\n        <li><code>&lt;p&gt;</code></li>\n        <li><code>&lt;small&gt;</code></li>\n        <li><code>&lt;strike&gt;</code></li>\n        <li><code>&lt;strong&gt;</code></li>\n        <li><code>&lt;sub&gt;</code></li>\n        <li><code>&lt;sup&gt;</code></li>\n        <li><code>&lt;tt&gt;</code></li>\n        <li><code>&lt;u&gt;</code></li>\n    </ul>\n</td>\n</table>\n\n### HTML and CSS on Windows\nHTML+CSS formatted body are not supported through the native API for Windows.\n\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n### Development\n\n### Testing\n\nAndroid and iOS Tooling setup, see \n```\nexport PLATFORM=android # or ios ..\nnpm run clean && npm run setupDemoApp && npm run build\n```\n\n\n## License\n\nThis software is released under the [Apache 2.0 License][apache2_license].\n\n© 2013-2016 appPlant UG, Inc. All rights reserved\n\n\n[cordova]: https://cordova.apache.org\n[ios_guide]: http://developer.apple.com/library/ios/documentation/MessageUI/Reference/MFMailComposeViewController_class/Reference/Reference.html\n[wp8_guide]: http://msdn.microsoft.com/en-us/library/windowsphone/develop/hh394003.aspx\n[CLI]: http://cordova.apache.org/docs/en/edge/guide_cli_index.md.html#The%20Command-line%20Interface\n[PGB]: http://docs.build.phonegap.com/en_US/index.html\n[npm]: https://www.npmjs.com/package/cordova-plugin-email-composer\n[messageui_framework]: #compile-error-on-ios\n[changelog]: https://github.com/katzer/cordova-plugin-email-composer/blob/master/CHANGELOG.md\n[available]: #determine-if-the-device-is-capable-to-send-emails\n[open]: #open-a-pre-filled-email-draft\n[email_app]: #specify-email-app\n[examples]: #examples\n[apache2_license]: http://opensource.org/licenses/Apache-2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hypery2k/cordova-email-plugin.git"
  },
  "scripts": {
    "abc": "karma start karma.conf.js",
    "build": "cd tmp/test-app && cordova platform add ${PLATFORM} && cordova plugin add ../.. && cordova build ${PLATFORM}",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
    "changelog:add": "git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md'",
    "clean": "rm -rf tmp && mkdir -p tmp",
    "e2e": "cd tmp/cordova-demo-app/ && cordova build ${PLATFORM} && cd ../..",
    "posttest": "jsdoc -c jsdoc.json && jsdoc2md www/email_composer.js | sed s/emailComposerPlugin/cordova.plugins.email/g | sed s/EmailComposerPlugin/cordova.plugins.email/g > PLUGIN_USAGE.MD && cd tmp/test-app && cordova plugin rm cordova-plugin-email-tests",
    "prepare": "npm run clean && npm run setupAndroidSDK && npm run setupDemoApp",
    "release:major": "npm version major && npm run release:pre && git push origin && git push origin --tags && npm run release:post && npm publish",
    "release:minor": "npm version minor && npm run release:pre && git push origin && git push origin --tags && npm run release:post && npm publish",
    "release:patch": "npm version patch && npm run release:pre && git push origin && git push origin --tags && npm run release:post && npm publish",
    "release:post": "node etc/release.js && git add plugin.xml && git commit -m 'Update plugin' && npm run changelog && npm run changelog:add",
    "release:pre": "npm run clean",
    "setupAndroidSDK": "cd tmp && git clone https://github.com/simpligility/maven-android-sdk-deployer.git && cd maven-android-sdk-deployer/ && mvn install -P 6.0 && ls ~/.m2/repository/android/android/",
    "setupDemoApp": "cd tmp && git clone https://github.com/apache/cordova-app-hello-world.git && mkdir test-app && cp -rp cordova-app-hello-world/template_src/* test-app && cd test-app && cordova plugin add cordova-plugin-device && cordova plugin add cordova-plugin-compat",
    "test": "cd tmp/test-app && node ../../etc/prepare_test_app.js config.xml && cordova platform add ${PLATFORM} && cordova plugin add http://git-wip-us.apache.org/repos/asf/cordova-plugin-test-framework.git && cordova plugin add ../../tests && cordova build ${PLATFORM}"
  },
  "version": "1.2.6"
}
